# Generated by Django 4.2.20 on 2025-10-14 00:04

import django.core.validators
from django.db import migrations, models
import django.db.models.constraints
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='MedAtlasListing',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=255)),
                ('organization_name', models.CharField(blank=True, max_length=200)),
                ('organization_website', models.URLField(blank=True)),
                ('organization_phone', models.CharField(blank=True, max_length=30, validators=[django.core.validators.RegexValidator(message='Enter a valid phone number.', regex='^\\+?[0-9\\-\\(\\) ]{7,}$')])),
                ('street', models.CharField(max_length=255)),
                ('city_text', models.CharField(max_length=120)),
                ('state', models.CharField(max_length=2)),
                ('postal_code', models.CharField(blank=True, max_length=20)),
                ('country', models.CharField(default='US', max_length=2)),
                ('phone', models.CharField(blank=True, max_length=30, validators=[django.core.validators.RegexValidator(message='Enter a valid phone number.', regex='^\\+?[0-9\\-\\(\\) ]{7,}$')])),
                ('website', models.URLField(blank=True)),
                ('city_slug', models.SlugField(blank=True, help_text="Short code for city/region, e.g., 'sac'", max_length=80)),
                ('cost', models.CharField(choices=[('free', 'Free'), ('low_cost', 'Low cost'), ('sliding', 'Sliding scale'), ('varies', 'Varies')], db_index=True, default='free', max_length=12)),
                ('services_csv', models.TextField(blank=True, help_text="Comma-separated service codes or labels (e.g., 'MH.COUNSEL,WOMEN.PRENATAL').")),
                ('languages_csv', models.TextField(blank=True, help_text="Comma-separated language codes (e.g., 'en,es,vi,zh').")),
                ('insurance_csv', models.TextField(blank=True, help_text="Comma-separated insurance names (e.g., 'Medicaid,Medicare,None').")),
                ('eligibility', models.JSONField(blank=True, default=dict)),
                ('accessibility', models.JSONField(blank=True, default=dict)),
                ('hours', models.JSONField(blank=True, default=dict)),
                ('latitude', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True, validators=[django.core.validators.MinValueValidator(-90), django.core.validators.MaxValueValidator(90)])),
                ('longitude', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True, validators=[django.core.validators.MinValueValidator(-180), django.core.validators.MaxValueValidator(180)])),
                ('verified', models.BooleanField(default=False)),
                ('last_verified_at', models.DateTimeField(blank=True, null=True)),
                ('verifier_name', models.CharField(blank=True, help_text='Non-sensitive name/title if desired.', max_length=200)),
                ('verifier_org', models.CharField(blank=True, help_text="e.g., 'County Public Health Dept'", max_length=200)),
                ('evidence_urls', models.JSONField(blank=True, default=list)),
                ('evidence_note', models.TextField(blank=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['-verified', 'name'],
                'indexes': [models.Index(fields=['name'], name='showcase_me_name_72e3a6_idx'), models.Index(fields=['city_slug'], name='showcase_me_city_sl_fdd64e_idx'), models.Index(fields=['state', 'verified', 'is_active'], name='showcase_me_state_c66033_idx')],
            },
        ),
        migrations.AddConstraint(
            model_name='medatlaslisting',
            constraint=models.UniqueConstraint(deferrable=django.db.models.constraints.Deferrable['DEFERRED'], fields=('name', 'street', 'city_text', 'state'), name='uniq_listing_basic_address'),
        ),
    ]
